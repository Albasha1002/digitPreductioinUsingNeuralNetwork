# -*- coding: utf-8 -*-
"""MNIST Digit Recognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sfo0vMdytx9MUUeEJKng5xzjj1t52WMK
"""

import numpy as np
import matplotlib.pyplot as plt

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Flatten, Dense

(X_train, y_train),(X_test,y_test)=keras.datasets.mnist.load_data()

print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)

X_train

plt.imshow(X_train[2
        ])

print(y_train[2])

X_train=X_train/255
X_test=X_test/255

X_train[0]

model= Sequential()
model.add(Flatten(input_shape=(28,28)))
model.add(Dense(128,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

model.compile(optimizer="Adam", loss='sparse_categorical_crossentropy',metrics=['accuracy'])
histroy=model.fit(X_train,y_train,batch_size=64,epochs=20,verbose=1,validation_split=0.2)

model.evaluate(X_test,y_test)

model.predict(X_test)

model.predict_classes(X_test)

plt.imshow(X_test[0])

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])

